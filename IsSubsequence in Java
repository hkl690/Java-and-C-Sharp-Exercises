/******************************************************************************

392. Is is-subsequence

Given two strings s and t, return true if s is a subsequence of t, or false otherwise.

A subsequence of a string is a new string that is formed from the original string by 
deleting some (can be none) of the characters without disturbing the relative positions 
of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).

*******************************************************************************/
import java.io.*;
import java.util.*;

// First String is a Subsequence of second using Two Pointers (Iterative)

class Main {

    // Returns true if s is subsequence of t
    static boolean IsSubsequence(String s, String t)
    {
       /* int n = s1.length, m = s2.length;
        int i = 0, j = 0; //pointers
        while (i< n && j < m){
            if (s[i] == t[j])
                i++;
            j++;
            this works but not on leetcode, said not all cases */
            
        // If i reaches end of s, then we have found characters of s in t,
        // so s is subsequence of t, else not
        // return i == n;
        // }
        
        // using pointers
        int sPtr = 0;
        for (int tPtr = 0; tPtr < t.length() && sPtr < s.length(); tPtr++)
            if(s.charAt(sPtr) == t.charAt(tPtr)){sPtr++;}
            return (sPtr == s.length());
    }

	public static void main(String[] args) 
	{
		String s = "acexz";
		String t = "abcdefgxyz";
		if (IsSubsequence(s, t))
		{
		    System.out.println(s + " is a subsequence of " + t);
		}
		else
		    System.out.println(s + "is not a subsequence of " + t);
		
	}
}

// https://leetcode.com/problems/is-subsequence/?envType=study-plan&id=level-1
